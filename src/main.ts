import 'reflect-metadata';
import LoggerService from './app/services/logger/logger.service.js';
import {ConfigService} from './app/services/config/config.service.js';
import Application from './app/application.js';
import {Container} from 'inversify';
import {Component} from './app/types/component.js';
import {LoggerInterface} from './app/services/interfaces/logger.interface.js';
import {ConfigInterface} from './app/services/interfaces/config.interface.js';
import DatabaseService from './app/services/database-client/database.service.js';
import {DatabaseInterface} from './app/services/interfaces/database-client/database.interface.js';
import {UserService} from './app/services/user.service.js';
import {UserServiceInterface} from './app/services/interfaces/user-service.interface.js';
import {UserEntity, UserModel} from './app/models/entities/db/user.entity.js';
import {types} from '@typegoose/typegoose';
import {CommentEntity, CommentModel} from './app/models/entities/db/comment.entity.js';
import {CommentService} from './app/services/comment.service.js';
import {CommentServiceInterface} from './app/services/interfaces/comment-service.interface.js';
import {PostServiceInterface} from './app/services/interfaces/post-service.interface.js';
import {PostService} from './app/services/post.service.js';
import {PostEntity, PostModel} from './app/models/entities/db/post.entity.js';
import {FavoriteEntity, FavoriteModel} from './app/models/entities/db/favorite.entity.js';
import {FavoriteServiceInterface} from './app/services/interfaces/favorite-service.interface.js';
import {FavoriteService} from './app/services/favorite.service.js';
import {CommentRatingsEntity, CommentRatingsModel} from './app/models/entities/db/comment-ratings.entity.js';
import {PostRatingsEntity, PostRatingsModel} from './app/models/entities/db/post-ratings.entity.js';
import {CommentRatingsServiceInterface} from './app/services/interfaces/comment-ratings-service.interface.js';
import {CommentRatingsService} from './app/services/comment-ratings.service.js';
import {PostRatingsServiceInterface} from './app/services/interfaces/post-ratings-service.interface.js';
import {PostRatingsService} from './app/services/post-ratings.service.js';
import {ControllerInterface} from './app/controllers/controller.interface.js';
import ExceptionFilter from './app/errors/exception-filter.js';
import {ExceptionFilterInterface} from './app/errors/exception-filter.interface.js';
import UserController from './app/controllers/user.controller.js';
import PostController from './app/controllers/post.controller.js';

const applicationContainer = new Container();
applicationContainer.bind<Application>(Component.Application).to(Application).inSingletonScope();
// INTERFACES
applicationContainer.bind<LoggerInterface>(Component.LoggerInterface).to(LoggerService).inSingletonScope();
applicationContainer.bind<ConfigInterface>(Component.ConfigInterface).to(ConfigService).inSingletonScope();
applicationContainer.bind<DatabaseInterface>(Component.DatabaseInterface).to(DatabaseService).inSingletonScope();
applicationContainer.bind<ExceptionFilterInterface>(Component.ExceptionFilterInterface).to(ExceptionFilter).inSingletonScope();
applicationContainer.bind<UserServiceInterface>(Component.UserServiceInterface).to(UserService);
applicationContainer.bind<CommentServiceInterface>(Component.CommentServiceInterface).to(CommentService);
applicationContainer.bind<CommentRatingsServiceInterface>(Component.CommentRatingsServiceInterface).to(CommentRatingsService);
applicationContainer.bind<PostRatingsServiceInterface>(Component.PostRatingsServiceInterface).to(PostRatingsService);
applicationContainer.bind<PostServiceInterface>(Component.PostServiceInterface).to(PostService);
applicationContainer.bind<FavoriteServiceInterface>(Component.FavoriteServiceInterface).to(FavoriteService);
// MODELS
applicationContainer.bind<types.ModelType<PostEntity>>(Component.PostModel).toConstantValue(PostModel);
applicationContainer.bind<types.ModelType<FavoriteEntity>>(Component.FavoriteModel).toConstantValue(FavoriteModel);
applicationContainer.bind<types.ModelType<CommentEntity>>(Component.CommentModel).toConstantValue(CommentModel);
applicationContainer.bind<types.ModelType<CommentRatingsEntity>>(Component.CommentRatingsModel).toConstantValue(CommentRatingsModel);
applicationContainer.bind<types.ModelType<PostRatingsEntity>>(Component.PostRatingsModel).toConstantValue(PostRatingsModel);
applicationContainer.bind<types.ModelType<UserEntity>>(Component.UserModel).toConstantValue(UserModel);
// CONTROLLERS
applicationContainer.bind<ControllerInterface>(Component.UserController).to(UserController).inSingletonScope();
applicationContainer.bind<ControllerInterface>(Component.PostController).to(PostController).inSingletonScope();

const application = applicationContainer.get<Application>(Component.Application);
await application.init();
